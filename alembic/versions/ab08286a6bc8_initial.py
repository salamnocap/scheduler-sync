"""Initial

Revision ID: ab08286a6bc8
Revises: 
Create Date: 2023-12-02 01:15:57.528303

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ab08286a6bc8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('opc_servers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('ip_address', sa.String(length=30), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('node_id', sa.String(length=30), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_opc_servers_enabled'), 'opc_servers', ['enabled'], unique=False)
    op.create_index(op.f('ix_opc_servers_ip_address'), 'opc_servers', ['ip_address'], unique=False)
    op.create_index(op.f('ix_opc_servers_name'), 'opc_servers', ['name'], unique=False)
    op.create_index(op.f('ix_opc_servers_node_id'), 'opc_servers', ['node_id'], unique=False)
    op.create_index(op.f('ix_opc_servers_port'), 'opc_servers', ['port'], unique=False)
    op.create_table('plc_servers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('ip_address', sa.String(length=30), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('db', sa.Integer(), nullable=True),
    sa.Column('rack', sa.Integer(), nullable=True),
    sa.Column('slot', sa.Integer(), nullable=True),
    sa.Column('offset', sa.Integer(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plc_servers_db'), 'plc_servers', ['db'], unique=False)
    op.create_index(op.f('ix_plc_servers_enabled'), 'plc_servers', ['enabled'], unique=False)
    op.create_index(op.f('ix_plc_servers_ip_address'), 'plc_servers', ['ip_address'], unique=False)
    op.create_index(op.f('ix_plc_servers_name'), 'plc_servers', ['name'], unique=False)
    op.create_index(op.f('ix_plc_servers_offset'), 'plc_servers', ['offset'], unique=False)
    op.create_index(op.f('ix_plc_servers_port'), 'plc_servers', ['port'], unique=False)
    op.create_index(op.f('ix_plc_servers_rack'), 'plc_servers', ['rack'], unique=False)
    op.create_index(op.f('ix_plc_servers_size'), 'plc_servers', ['size'], unique=False)
    op.create_index(op.f('ix_plc_servers_slot'), 'plc_servers', ['slot'], unique=False)
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('job_type', sa.String(length=10), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('opc_id', sa.UUID(), nullable=True),
    sa.Column('plc_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['opc_id'], ['opc_servers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['plc_id'], ['plc_servers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_opc_id'), 'jobs', ['opc_id'], unique=False)
    op.create_index(op.f('ix_jobs_plc_id'), 'jobs', ['plc_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_jobs_plc_id'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_opc_id'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_plc_servers_slot'), table_name='plc_servers')
    op.drop_index(op.f('ix_plc_servers_size'), table_name='plc_servers')
    op.drop_index(op.f('ix_plc_servers_rack'), table_name='plc_servers')
    op.drop_index(op.f('ix_plc_servers_port'), table_name='plc_servers')
    op.drop_index(op.f('ix_plc_servers_offset'), table_name='plc_servers')
    op.drop_index(op.f('ix_plc_servers_name'), table_name='plc_servers')
    op.drop_index(op.f('ix_plc_servers_ip_address'), table_name='plc_servers')
    op.drop_index(op.f('ix_plc_servers_enabled'), table_name='plc_servers')
    op.drop_index(op.f('ix_plc_servers_db'), table_name='plc_servers')
    op.drop_table('plc_servers')
    op.drop_index(op.f('ix_opc_servers_port'), table_name='opc_servers')
    op.drop_index(op.f('ix_opc_servers_node_id'), table_name='opc_servers')
    op.drop_index(op.f('ix_opc_servers_name'), table_name='opc_servers')
    op.drop_index(op.f('ix_opc_servers_ip_address'), table_name='opc_servers')
    op.drop_index(op.f('ix_opc_servers_enabled'), table_name='opc_servers')
    op.drop_table('opc_servers')
    # ### end Alembic commands ###
